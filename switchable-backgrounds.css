/* Override existing background color for switchable backgrounds */
body[data-background] {
    background-color: #1a1a1a !important;
}

/* Base styles for all backgrounds */
body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -10;
    transition: all 0.5s ease;
}

body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -11;
}

/* Apple-Inspired Backgrounds */

/* Mesh Gradients */
body[data-background="mesh"] ::before {
    background: 
        radial-gradient(circle at 20% 30%, rgba(120, 119, 198, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.12) 0%, transparent 50%),
        radial-gradient(circle at 40% 70%, rgba(119, 198, 255, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 90% 80%, rgba(198, 255, 119, 0.08) 0%, transparent 50%);
    animation: meshMove 20s ease-in-out infinite;
}

@keyframes meshMove {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(-10px, -20px) rotate(1deg); }
    50% { transform: translate(20px, -10px) rotate(-1deg); }
    75% { transform: translate(-15px, 15px) rotate(0.5deg); }
}

/* Glowing Orbs */
body[data-background="orbs"] {
    position: relative;
}

body[data-background="orbs"] .orb {
    position: fixed;
    border-radius: 50%;
    filter: blur(40px);
    opacity: 0.4;
    animation: float 15s ease-in-out infinite;
    pointer-events: none;
    z-index: -1;
}

body[data-background="orbs"] .orb:nth-child(1) {
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, rgba(88, 86, 214, 0.6) 0%, transparent 70%);
    top: 10vh;
    left: 15vw;
    animation-delay: 0s;
}

body[data-background="orbs"] .orb:nth-child(2) {
    width: 150px;
    height: 150px;
    background: radial-gradient(circle, rgba(214, 86, 214, 0.5) 0%, transparent 70%);
    top: 60vh;
    right: 20vw;
    animation-delay: -5s;
}

body[data-background="orbs"] .orb:nth-child(3) {
    width: 100px;
    height: 100px;
    background: radial-gradient(circle, rgba(86, 214, 214, 0.4) 0%, transparent 70%);
    top: 30vh;
    right: 40vw;
    animation-delay: -10s;
}

@keyframes float {
    0%, 100% { transform: translate(0, 0) scale(1); }
    25% { transform: translate(30px, -20px) scale(1.1); }
    50% { transform: translate(-20px, -30px) scale(0.9); }
    75% { transform: translate(-10px, 20px) scale(1.05); }
}

/* Subtle Patterns & Textures */

/* Noise Texture */
body[data-background="noise"]::before {
    background-image: 
        radial-gradient(circle, transparent 1px, rgba(255,255,255,0.02) 1px);
    background-size: 4px 4px;
    opacity: 0.6;
}

/* Geometric Grid */
body[data-background="grid"]::before {
    background-image: 
        linear-gradient(rgba(255,255,255,0.03) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.03) 1px, transparent 1px);
    background-size: 40px 40px;
}

/* Dot Pattern */
body[data-background="dots"]::before {
    background-image: 
        radial-gradient(circle, rgba(255,255,255,0.04) 1px, transparent 1px);
    background-size: 30px 30px;
}

/* Paper Texture */
body[data-background="paper"]::before {
    background-image: 
        radial-gradient(circle at 25% 25%, rgba(255,255,255,0.015) 2px, transparent 2px),
        radial-gradient(circle at 75% 75%, rgba(255,255,255,0.02) 1px, transparent 1px),
        radial-gradient(circle at 50% 100%, rgba(255,255,255,0.01) 3px, transparent 3px);
    background-size: 15px 15px, 8px 8px, 12px 12px;
}

/* Gradual Gradients */

/* Radial Gradient */
body[data-background="radial"] {
    background: radial-gradient(circle at center, #1f1f1f 0%, #1a1a1a 70%, #161616 100%);
}

/* Color Shift */
body[data-background="colorshift"] {
    background: linear-gradient(135deg, #1a1a1a 0%, #1e1e1e 25%, #242424 50%, #1e1e1e 75%, #1a1a1a 100%);
}

/* Vignette */
body[data-background="vignette"]::before {
    background: radial-gradient(circle at center, transparent 30%, rgba(0,0,0,0.3) 100%);
}

/* Animated Gradient */
body[data-background="animated"] {
    background: linear-gradient(45deg, #1a1a1a, #1e1e1e, #242424, #1e1e1e, #1a1a1a);
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
}

@keyframes gradient-shift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Interactive Elements */

/* Floating Particles */
body[data-background="particles"] .particle {
    position: fixed;
    width: 2px;
    height: 2px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    animation: float-particle 20s linear infinite;
    pointer-events: none;
    z-index: -1;
}

body[data-background="particles"] .particle:nth-child(1) { left: 10%; animation-delay: -2s; animation-duration: 25s; }
body[data-background="particles"] .particle:nth-child(2) { left: 20%; animation-delay: -4s; animation-duration: 30s; }
body[data-background="particles"] .particle:nth-child(3) { left: 30%; animation-delay: -6s; animation-duration: 22s; }
body[data-background="particles"] .particle:nth-child(4) { left: 40%; animation-delay: -8s; animation-duration: 28s; }
body[data-background="particles"] .particle:nth-child(5) { left: 50%; animation-delay: -10s; animation-duration: 26s; }
body[data-background="particles"] .particle:nth-child(6) { left: 60%; animation-delay: -12s; animation-duration: 24s; }
body[data-background="particles"] .particle:nth-child(7) { left: 70%; animation-delay: -14s; animation-duration: 32s; }
body[data-background="particles"] .particle:nth-child(8) { left: 80%; animation-delay: -16s; animation-duration: 27s; }
body[data-background="particles"] .particle:nth-child(9) { left: 90%; animation-delay: -18s; animation-duration: 29s; }

@keyframes float-particle {
    0% { transform: translateY(100vh) translateX(0px); opacity: 0; }
    10% { opacity: 0.1; }
    90% { opacity: 0.1; }
    100% { transform: translateY(-100px) translateX(20px); opacity: 0; }
}

/* Parallax Background */
body[data-background="parallax"]::before {
    width: 120%;
    height: 120%;
    top: -10%;
    left: -10%;
    background-image: 
        radial-gradient(circle at 20% 20%, rgba(255,255,255,0.02) 2px, transparent 2px),
        radial-gradient(circle at 80% 80%, rgba(255,255,255,0.015) 3px, transparent 3px);
    background-size: 60px 60px, 90px 90px;
    animation: parallax-float 40s ease-in-out infinite;
}

@keyframes parallax-float {
    0%, 100% { transform: translate(0, 0); }
    25% { transform: translate(-5px, -10px); }
    50% { transform: translate(5px, -5px); }
    75% { transform: translate(-3px, 5px); }
}

/* Geometric Accents */

/* Wireframe */
body[data-background="wireframe"]::before {
    background-image: 
        linear-gradient(rgba(255,255,255,0.02) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.02) 1px, transparent 1px),
        linear-gradient(45deg, transparent 40%, rgba(255,255,255,0.01) 41%, rgba(255,255,255,0.01) 42%, transparent 43%);
    background-size: 50px 50px, 50px 50px, 20px 20px;
    animation: wireframe-shift 25s ease-in-out infinite;
}

@keyframes wireframe-shift {
    0%, 100% { transform: translate(0, 0); }
    50% { transform: translate(10px, 5px); }
}

/* Blueprint */
body[data-background="blueprint"] {
    background-color: #1a1a1a !important;
    /* background-color: #070D21 !important; */
    background-color: #1B0F02 !important;

}

body[data-background="blueprint"]::before {
    background-image: 
        linear-gradient(rgba(57, 255, 20, 0.12) 1px, transparent 1px),
        linear-gradient(90deg, rgba(57, 255, 20, 0.12) 1px, transparent 1px),
        linear-gradient(rgba(57, 255, 20, 0.08) 1px, transparent 1px),
        linear-gradient(90deg, rgba(57, 255, 20, 0.08) 1px, transparent 1px);
    background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;
}

body[data-background="blueprint"]::after {
    content: '';
    position: fixed;
    top: 20px;
    right: 20px;
    width: 150px;
    height: 80px;
    border: 1px solid rgba(100, 200, 255, 0.05);
    border-radius: 4px;
    background: linear-gradient(45deg, transparent 49%, rgba(100, 200, 255, 0.02) 50%, transparent 51%);
    pointer-events: none;
    z-index: -1;
}

/* Grid System */
body[data-background="gridsystem"]::before {
    background-image: 
        linear-gradient(rgba(255,255,255,0.025) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.025) 1px, transparent 1px),
        linear-gradient(rgba(255,255,255,0.01) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.01) 1px, transparent 1px);
    background-size: 120px 120px, 120px 120px, 24px 24px, 24px 24px;
    animation: grid-pulse 20s ease-in-out infinite;
}

@keyframes grid-pulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
}

/* Geometric Shapes */
body[data-background="shapes"] .shape {
    position: fixed;
    border: 1px solid rgba(255, 255, 255, 0.03);
    animation: rotate-shape 30s linear infinite;
    pointer-events: none;
    z-index: -1;
}

body[data-background="shapes"] .shape:nth-child(1) {
    width: 100px;
    height: 100px;
    top: 10vh;
    right: 15vw;
    transform-origin: center;
}

body[data-background="shapes"] .shape:nth-child(2) {
    width: 60px;
    height: 60px;
    bottom: 20vh;
    left: 10vw;
    border-radius: 50%;
    animation-direction: reverse;
    animation-duration: 45s;
}

body[data-background="shapes"] .shape:nth-child(3) {
    width: 80px;
    height: 80px;
    top: 60vh;
    right: 40vw;
    transform: rotate(45deg);
    animation-duration: 35s;
}

@keyframes rotate-shape {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Combination Examples */

/* Vignette + Dots */
body[data-background="vignette-dots"]::before {
    background: 
        radial-gradient(circle at center, transparent 30%, rgba(0,0,0,0.3) 100%),
        radial-gradient(circle, rgba(255,255,255,0.04) 1px, transparent 1px);
    background-size: 100% 100%, 30px 30px;
}

/* Grid + Vignette */
body[data-background="grid-vignette"]::before {
    background: 
        radial-gradient(circle at center, transparent 30%, rgba(0,0,0,0.2) 100%),
        linear-gradient(rgba(255,255,255,0.03) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.03) 1px, transparent 1px);
    background-size: 100% 100%, 40px 40px, 40px 40px;
}